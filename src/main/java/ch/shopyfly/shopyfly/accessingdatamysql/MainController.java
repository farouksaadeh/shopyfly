package ch.shopyfly.shopyfly.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import java.util.Optional;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/add")
    public @ResponseBody String addNewUser (@RequestParam String name, @RequestParam String email) {
        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
        // Irgendwann muss der "String name" und "String email" zu: " String email" und "String password" gewechselt werden.
        //Jedoch muss der Controller bei get.. auch ge√§ndert werden! Alle Komponenten beachten!!
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        return userRepository.findAll();
    }

    @PostMapping(path="/register")
    public @ResponseBody String registerUser (@RequestParam String name, @RequestParam String email) {
        if(userRepository.findByName(name).isPresent()){
            return "Benutzername bereits vorhanden.";
        }
        User newUser = new User();
        newUser.setName(name);
        newUser.setEmail(email);
        userRepository.save(newUser);
        return "Benutzer erfolgreich registriert.";
    }

    @GetMapping(path="/register")
    @ResponseBody
    public String showRegistrationForm() {
        return "<!DOCTYPE html>" +
                "<html>" +
                "<head><title>Registrierung</title></head>" +
                "<body>" +
                "<form action='/demo/register' method='post'>" +
                "E-Mail: <input type='text' name='name'><br><br>" +
                "Passwort: <input type='text' name='email'><br><br>" +
                "<input type='submit' value='Registrieren'>" +
                "</form>" +
                "<br>" +
                "Haben Sie bereits ein Konto? <a href='/demo/login'>Zur Anmeldung</a>" + // Link zur Login-Seite
                "</body>" +
                "</html>";

    }

    @GetMapping(path="/findByName")
    public @ResponseBody String findByName(@RequestParam String name) {
        Optional<User> optionalUser = userRepository.findByName(name);
        if (optionalUser.isPresent()) {
            return optionalUser.get().getName() + ", " + optionalUser.get().getEmail();
        } else {
            return "User not found!";
        }
    }

    @GetMapping(path="/login")
    @ResponseBody
    public String showLoginForm() {
        return "<!DOCTYPE html>" +
                "<html>" +
                "<head><title>Login</title></head>" +
                "<body>" +
                "<h2>Login-Formular</h2>" +
                "<form action='/demo/login' method='post'>" +
                "E-Mail: <input type='text' name='name' required><br><br>" +
                "Passwort: <input type='password' name='password' required><br><br>" +
                "<input type='submit' value='Anmelden'>" +
                "</form>" +
                "<br>" +
                "Sie besitzen noch kein Konto? Erstellen Sie eins <a href='/demo/register'>Zur Registration</a>" + // Link zur Login-Seite
                "</body>" +
                "</html>";
    }

    @PostMapping(path="/login")
    public @ResponseBody String loginUser (@RequestParam String name, @RequestParam String password) {
        Optional<User> optionalUser = userRepository.findByName(name);
        if (optionalUser.isPresent()) {
            return "Erfolgreich angemeldet!";
        } else {
            return "Benutzername oder Passwort ist falsch!";
        }
    }
}
